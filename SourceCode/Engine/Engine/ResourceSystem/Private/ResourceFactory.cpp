// Copyright 2016-2020 ?????????????. All Rights Reserved.
#include <ResourceSystem\Private\ResourceFactory.h>
#include <ResourceSystem\Resource.h>
#include <ResourceSystem\Private\ResourceSystemAllocators.h>
#include <Rendering\RenderingManager.h>
#include <FontSystem\FontManager.h>
#include <Utility\AssetParser\OBJParser.h>
#include <Utility\AssetParser\InternalModelParser.h>

#define STB_IMAGE_IMPLEMENTATION
#include <STB\stb_image.h>

namespace Engine
{
	using namespace Containers;
	using namespace Rendering;
	using namespace FontSystem;

	namespace ResourceSystem
	{
		namespace Private
		{
			SINGLETON_DEFINITION(ResourceFactory)

				ResourceFactory::ResourceFactory(void)
			{
			}

			ResourceFactory::~ResourceFactory(void)
			{
			}

			bool ResourceFactory::Compile(const WString &Extension, ByteBuffer &OutBuffer, const ByteBuffer &InBuffer, ResourceTypes &Type)
			{
				FileTypes fileType = GetFileTypeByExtension(Extension);

				if (fileType == FileTypes::Unknown)
					return false;

				Type = GetResourceTypeByFileType(fileType);

				OutBuffer << (int32)Type;
				OutBuffer << InBuffer.GetSize();

				switch (Type)
				{
				case ResourceTypes::Text:
				case ResourceTypes::Program:
				{
					OutBuffer.AppendBuffer(InBuffer);
				}
				break;

				case ResourceTypes::Texture:
				{
					CompileImageFile(OutBuffer, InBuffer);
				}
				break;

				case ResourceTypes::Mesh:
				{
					if (fileType == FileTypes::OBJ)
						CompileOBJFile(OutBuffer, InBuffer);
				}
				break;

				case ResourceTypes::Font:
				{
					OutBuffer.AppendBuffer(InBuffer);
				}
				break;

				default:
					Assert(false, "Unknown Resource Type");
					break;
				}

				return true;
			}

			Text *ResourceFactory::CreateText(const ByteBuffer &Buffer)
			{
				wstr data = ResourceSystemAllocators::Allocate<char16>(Buffer.GetSize() + 1);
				CharacterUtility::ChangeType(Buffer.GetBuffer(), data, Buffer.GetSize());
				data[Buffer.GetSize()] = CharacterUtility::Character<char16, '\0'>::Value;

				Text *text = ResourceSystemAllocators::Allocate<Text>(1);
				Construct(text, data);

				ResourceSystemAllocators::Deallocate(data);

				return text;
			}

			void ResourceFactory::DestroyText(Text * Text)
			{
				ResourceSystemAllocators::Deallocate(Text);
			}

			Texture *ResourceFactory::CreateTexture(const ByteBuffer &Buffer)
			{
				uint64 index = 0;
				int32 width = Buffer.ReadValue<int32>(index);
				index += sizeof(int32);
				int32 height = Buffer.ReadValue<int32>(index);
				index += sizeof(int32);
				int32 channelCount = Buffer.ReadValue<int32>(index);
				index += sizeof(int32);

				const byte * const data = Buffer.ReadValue(index, (width * height * channelCount));

				Texture::Formats format = (channelCount == 3 ? Texture::Formats::RGB8 : Texture::Formats::RGBA8);

				Texture *tex = RenderingManager::GetInstance()->GetActiveDevice()->CreateTexture2D(data, width, height, format);

				return tex;
			}

			void ResourceFactory::DestroyTexture(Texture * Texture)
			{
				RenderingManager::GetInstance()->GetActiveDevice()->DestroyTexture(Texture);
			}

			Program *ResourceFactory::CreateProgram(const ByteBuffer &Buffer, String* Message)
			{
				auto data = ConstCast(str, ReinterpretCast(cstr, Buffer.GetBuffer()));
				data[Buffer.GetSize()] = CharacterUtility::Character<char8, '\0'>::Value;

				return RenderingManager::GetInstance()->GetActiveDevice()->CreateProgram(data, Message);
			}

			void ResourceFactory::DestroyProgram(Program * Program)
			{
				RenderingManager::GetInstance()->GetActiveDevice()->DestroyProgram(Program);
			}

			Mesh * ResourceFactory::CreateMesh(const ByteBuffer &Buffer)
			{
				MeshInfo meshInfo;

				AssetParser::InternalModelParser parser;
				parser.Parse(Buffer, meshInfo);

				return RenderingManager::GetInstance()->GetActiveDevice()->CreateMesh(&meshInfo, IDevice::BufferUsages::StaticDraw);
			}

			void ResourceFactory::DestroyMesh(Mesh * Mesh)
			{
				RenderingManager::GetInstance()->GetActiveDevice()->DestroyMesh(Mesh);
			}

			Font * ResourceFactory::CreateFont(const ByteBuffer &Buffer)
			{
				FontManager *fontMgr = FontManager::GetInstance();

				return fontMgr->LoadFont(Buffer);
			}

			void ResourceFactory::DestroyFont(Font * Font)
			{
				FontManager *fontMgr = FontManager::GetInstance();

				fontMgr->DestroyFont(Font);
			}

			Mesh * ResourceFactory::CreatePrimitiveMesh(PrimitiveMeshTypes Type)
			{
				SubMeshInfo *subMeshInfo = ReinterpretCast(SubMeshInfo*, AllocateMemory(&ResourceSystemAllocators::ResourceAllocator, sizeof(SubMeshInfo)));
				Construct(subMeshInfo, &ResourceSystemAllocators::ResourceAllocator);
				auto &subInfo = *subMeshInfo;

				if (Type == PrimitiveMeshTypes::Quad)
				{
					subInfo.Vertices.Add({ Vector3F(-0.5F, 0.5F, 0), Vector2F(0, 1) });
					subInfo.Vertices.Add({ Vector3F(-0.5F, -0.5F, 0), Vector2F(0, 0) });
					subInfo.Vertices.Add({ Vector3F(0.5F, 0.5F, 0), Vector2F(1, 1) });
					subInfo.Vertices.Add({ Vector3F(0.5F, -0.5F, 0), Vector2F(1, 0) });
					subInfo.Indices.Add(0);
					subInfo.Indices.Add(1);
					subInfo.Indices.Add(2);
					subInfo.Indices.Add(2);
					subInfo.Indices.Add(1);
					subInfo.Indices.Add(3);
					subInfo.Type = Mesh::SubMesh::PolygonTypes::Triangles;
					subInfo.Layout = Mesh::SubMesh::VertexLayouts::Position | Mesh::SubMesh::VertexLayouts::UV;
				}
				else if (Type == PrimitiveMeshTypes::Cube)
				{
					static String Data =
						"v -0.500000 -0.500000 0.500000	   \n"
						"v 0.500000 -0.500000 0.500000	   \n"
						"v -0.500000 0.500000 0.500000	   \n"
						"v 0.500000 0.500000 0.500000	   \n"
						"v -0.500000 0.500000 -0.500000	   \n"
						"v 0.500000 0.500000 -0.500000	   \n"
						"v -0.500000 -0.500000 -0.500000   \n"
						"v 0.500000 -0.500000 -0.500000	   \n"
						"vt 0.375000 0.000000			   \n"
						"vt 0.625000 0.000000			   \n"
						"vt 0.375000 0.250000			   \n"
						"vt 0.625000 0.250000			   \n"
						"vt 0.375000 0.500000			   \n"
						"vt 0.625000 0.500000			   \n"
						"vt 0.375000 0.750000			   \n"
						"vt 0.625000 0.750000			   \n"
						"vt 0.375000 1.000000			   \n"
						"vt 0.625000 1.000000			   \n"
						"vt 0.875000 0.000000			   \n"
						"vt 0.875000 0.250000			   \n"
						"vt 0.125000 0.000000			   \n"
						"vt 0.125000 0.250000			   \n"
						"vn 0.000000 0.000000 1.000000	   \n"
						"vn 0.000000 0.000000 1.000000	   \n"
						"vn 0.000000 0.000000 1.000000	   \n"
						"vn 0.000000 0.000000 1.000000	   \n"
						"vn 0.000000 1.000000 0.000000	   \n"
						"vn 0.000000 1.000000 0.000000	   \n"
						"vn 0.000000 1.000000 0.000000	   \n"
						"vn 0.000000 1.000000 0.000000	   \n"
						"vn 0.000000 0.000000 -1.000000	   \n"
						"vn 0.000000 0.000000 -1.000000	   \n"
						"vn 0.000000 0.000000 -1.000000	   \n"
						"vn 0.000000 0.000000 -1.000000	   \n"
						"vn 0.000000 -1.000000 0.000000	   \n"
						"vn 0.000000 -1.000000 0.000000	   \n"
						"vn 0.000000 -1.000000 0.000000	   \n"
						"vn 0.000000 -1.000000 0.000000	   \n"
						"vn 1.000000 0.000000 0.000000	   \n"
						"vn 1.000000 0.000000 0.000000	   \n"
						"vn 1.000000 0.000000 0.000000	   \n"
						"vn 1.000000 0.000000 0.000000	   \n"
						"vn -1.000000 0.000000 0.000000	   \n"
						"vn -1.000000 0.000000 0.000000	   \n"
						"vn -1.000000 0.000000 0.000000	   \n"
						"vn -1.000000 0.000000 0.000000	   \n"
						"f 1/1/1 2/2/2 3/3/3			   \n"
						"f 3/3/3 2/2/2 4/4/4			   \n"
						"f 3/3/5 4/4/6 5/5/7			   \n"
						"f 5/5/7 4/4/6 6/6/8			   \n"
						"f 5/5/9 6/6/10 7/7/11			   \n"
						"f 7/7/11 6/6/10 8/8/12			   \n"
						"f 7/7/13 8/8/14 1/9/15			   \n"
						"f 1/9/15 8/8/14 2/10/16		   \n"
						"f 2/2/17 8/11/18 4/4/19		   \n"
						"f 4/4/19 8/11/18 6/12/20		   \n"
						"f 7/13/21 1/1/22 5/14/23		   \n"
						"f 5/14/23 1/1/22 3/3/24		   \n";

					AssetParser::OBJParser parser;
					parser.Parse(ByteBuffer(ReinterpretCast(byte*, Data.GetValue()), Data.GetLength()), subInfo);
				}
				else if (Type == PrimitiveMeshTypes::Sphere)
				{
					static String Data =
						"v 0.146946 -0.475528 -0.047746		  \n"
						"v 0.125000 -0.475528 -0.090818		  \n"
						"v 0.045975 -0.493844 -0.063279		  \n"
						"v 0.047746 -0.475528 -0.146946		  \n"
						"v 0.000000 -0.493844 -0.078217		  \n"
						"v -0.047746 -0.475528 -0.146946	  \n"
						"v -0.045975 -0.493844 -0.063279	  \n"
						"v -0.063279 -0.493844 -0.045975	  \n"
						"v -0.146946 -0.475528 0.047746		  \n"
						"v -0.090818 -0.475528 0.125000		  \n"
						"v -0.000000 -0.475528 0.154509		  \n"
						"v 0.090818 -0.475528 0.125000		  \n"
						"v 0.146946 -0.475528 0.047746		  \n"
						"v -0.146946 -0.475528 -0.047746	  \n"
						"v 0.215885 -0.445503 -0.070145		  \n"
						"v 0.133425 -0.445503 -0.183643		  \n"
						"v 0.000000 -0.445503 -0.226995		  \n"
						"v -0.133425 -0.445503 -0.183643	  \n"
						"v -0.215885 -0.445503 0.070145		  \n"
						"v -0.133424 -0.445503 0.183643		  \n"
						"v -0.000000 -0.445503 0.226995		  \n"
						"v 0.133424 -0.445503 0.183643		  \n"
						"v 0.279509 -0.404509 -0.090818		  \n"
						"v 0.286031 -0.353553 -0.207814		  \n"
						"v 0.207814 -0.353553 -0.286031		  \n"
						"v 0.109254 -0.353553 -0.336249		  \n"
						"v 0.000000 -0.353553 -0.353554		  \n"
						"v -0.109254 -0.353553 -0.336249	  \n"
						"v -0.207814 -0.353553 -0.286031	  \n"
						"v -0.286031 -0.353553 -0.207814	  \n"
						"v -0.336249 -0.353553 -0.109254	  \n"
						"v -0.353553 -0.353553 0.000000		  \n"
						"v -0.336249 -0.353553 0.109254		  \n"
						"v -0.286031 -0.353553 0.207814		  \n"
						"v -0.207814 -0.353553 0.286031		  \n"
						"v -0.109254 -0.353553 0.336249		  \n"
						"v -0.000000 -0.353553 0.353553		  \n"
						"v 0.109254 -0.353553 0.336249		  \n"
						"v 0.207813 -0.353553 0.286031		  \n"
						"v 0.286031 -0.353553 0.207813		  \n"
						"v 0.336249 -0.353553 0.109254		  \n"
						"v 0.353553 -0.353553 0.000000		  \n"
						"v 0.336249 -0.353553 -0.109254		  \n"
						"v 0.384711 -0.293893 -0.125000		  \n"
						"v 0.360420 -0.226995 -0.261860		  \n"
						"v 0.261860 -0.226995 -0.360420		  \n"
						"v 0.137668 -0.226995 -0.423699		  \n"
						"v 0.000000 -0.226995 -0.445503		  \n"
						"v -0.137668 -0.226995 -0.423699	  \n"
						"v -0.261860 -0.226995 -0.360420	  \n"
						"v -0.360420 -0.226995 -0.261860	  \n"
						"v -0.423699 -0.226995 -0.137668	  \n"
						"v -0.445503 -0.226995 0.000000		  \n"
						"v -0.423699 -0.226995 0.137668		  \n"
						"v -0.360420 -0.226995 0.261860		  \n"
						"v -0.261860 -0.226995 0.360420		  \n"
						"v -0.137668 -0.226995 0.423699		  \n"
						"v -0.000000 -0.226995 0.445503		  \n"
						"v 0.137668 -0.226995 0.423699		  \n"
						"v 0.261860 -0.226995 0.360420		  \n"
						"v 0.360420 -0.226995 0.261860		  \n"
						"v 0.423699 -0.226995 0.137668		  \n"
						"v 0.445503 -0.226995 0.000000		  \n"
						"v 0.423699 -0.226995 -0.137668		  \n"
						"v 0.452255 -0.154508 -0.146946		  \n"
						"v 0.399529 -0.078217 -0.290275		  \n"
						"v 0.290275 -0.078217 -0.399529		  \n"
						"v 0.152606 -0.078217 -0.469674		  \n"
						"v 0.000000 -0.078217 -0.493844		  \n"
						"v -0.152606 -0.078217 -0.469674	  \n"
						"v -0.290274 -0.078217 -0.399528	  \n"
						"v -0.399528 -0.078217 -0.290274	  \n"
						"v -0.469674 -0.078217 -0.152606	  \n"
						"v -0.493844 -0.078217 0.000000		  \n"
						"v -0.469674 -0.078217 0.152606		  \n"
						"v -0.399528 -0.078217 0.290274		  \n"
						"v -0.290274 -0.078217 0.399528		  \n"
						"v -0.152606 -0.078217 0.469674		  \n"
						"v -0.000000 -0.078217 0.493844		  \n"
						"v 0.152606 -0.078217 0.469674		  \n"
						"v 0.290274 -0.078217 0.399528		  \n"
						"v 0.399528 -0.078217 0.290274		  \n"
						"v 0.469674 -0.078217 0.152606		  \n"
						"v 0.493844 -0.078217 0.000000		  \n"
						"v 0.469674 -0.078217 -0.152606		  \n"
						"v 0.475529 0.000000 -0.154509		  \n"
						"v 0.404509 0.000000 -0.293893		  \n"
						"v 0.293893 0.000000 -0.404509		  \n"
						"v 0.154509 0.000000 -0.475529		  \n"
						"v 0.000000 0.000000 -0.500000		  \n"
						"v -0.154509 0.000000 -0.475528		  \n"
						"v -0.293893 0.000000 -0.404509		  \n"
						"v -0.404509 0.000000 -0.293893		  \n"
						"v -0.475528 0.000000 -0.154509		  \n"
						"v -0.500000 0.000000 0.000000		  \n"
						"v -0.475528 0.000000 0.154509		  \n"
						"v -0.404509 0.000000 0.293893		  \n"
						"v -0.293893 0.000000 0.404509		  \n"
						"v -0.154509 0.000000 0.475528		  \n"
						"v -0.000000 0.000000 0.500000		  \n"
						"v 0.154508 0.000000 0.475528		  \n"
						"v 0.293893 0.000000 0.404509		  \n"
						"v 0.404509 0.000000 0.293893		  \n"
						"v 0.475528 0.000000 0.154509		  \n"
						"v 0.500000 0.000000 0.000000		  \n"
						"v 0.469674 0.078217 -0.152606		  \n"
						"v 0.290275 0.078217 -0.399529		  \n"
						"v 0.152606 0.078217 -0.469674		  \n"
						"v 0.000000 0.078217 -0.493844		  \n"
						"v -0.152606 0.078217 -0.469674		  \n"
						"v -0.399528 0.078217 -0.290274		  \n"
						"v -0.469674 0.078217 -0.152606		  \n"
						"v -0.493844 0.078217 0.000000		  \n"
						"v -0.469674 0.078217 0.152606		  \n"
						"v -0.399528 0.078217 0.290274		  \n"
						"v -0.290274 0.078217 0.399528		  \n"
						"v -0.152606 0.078217 0.469674		  \n"
						"v -0.000000 0.078217 0.493844		  \n"
						"v 0.152606 0.078217 0.469674		  \n"
						"v 0.290274 0.078217 0.399528		  \n"
						"v 0.399528 0.078217 0.290274		  \n"
						"v 0.469674 0.078217 0.152606		  \n"
						"v 0.493844 0.078217 0.000000		  \n"
						"v 0.452255 0.154508 -0.146946		  \n"
						"v 0.384711 0.154508 -0.279509		  \n"
						"v -0.279509 0.154508 -0.384711		  \n"
						"v 0.423699 0.226995 -0.137668		  \n"
						"v 0.261860 0.226995 -0.360420		  \n"
						"v 0.137668 0.226995 -0.423699		  \n"
						"v 0.000000 0.226995 -0.445503		  \n"
						"v -0.137668 0.226995 -0.423699		  \n"
						"v -0.360420 0.226995 -0.261860		  \n"
						"v -0.423699 0.226995 -0.137668		  \n"
						"v -0.445503 0.226995 0.000000		  \n"
						"v -0.423699 0.226995 0.137668		  \n"
						"v -0.360420 0.226995 0.261860		  \n"
						"v -0.261860 0.226995 0.360420		  \n"
						"v -0.137668 0.226995 0.423699		  \n"
						"v -0.000000 0.226995 0.445503		  \n"
						"v 0.137668 0.226995 0.423699		  \n"
						"v 0.261860 0.226995 0.360420		  \n"
						"v 0.360420 0.226995 0.261860		  \n"
						"v 0.423699 0.226995 0.137668		  \n"
						"v 0.445503 0.226995 0.000000		  \n"
						"v 0.384711 0.293893 -0.125000		  \n"
						"v 0.327254 0.293893 -0.237764		  \n"
						"v -0.237764 0.293893 -0.327254		  \n"
						"v 0.336249 0.353553 -0.109254		  \n"
						"v 0.207814 0.353553 -0.286031		  \n"
						"v 0.109254 0.353553 -0.336249		  \n"
						"v 0.000000 0.353553 -0.353554		  \n"
						"v -0.109254 0.353553 -0.336249		  \n"
						"v -0.286031 0.353553 -0.207814		  \n"
						"v -0.336249 0.353553 -0.109254		  \n"
						"v -0.353553 0.353553 0.000000		  \n"
						"v -0.336249 0.353553 0.109254		  \n"
						"v -0.286031 0.353553 0.207814		  \n"
						"v -0.207814 0.353553 0.286031		  \n"
						"v -0.109254 0.353553 0.336249		  \n"
						"v -0.000000 0.353553 0.353553		  \n"
						"v 0.109254 0.353553 0.336249		  \n"
						"v 0.207813 0.353553 0.286031		  \n"
						"v 0.286031 0.353553 0.207813		  \n"
						"v 0.336249 0.353553 0.109254		  \n"
						"v 0.353553 0.353553 0.000000		  \n"
						"v 0.279509 0.404509 -0.090818		  \n"
						"v 0.237764 0.404509 -0.172746		  \n"
						"v -0.172746 0.404509 -0.237764		  \n"
						"v 0.070145 0.445503 -0.215885		  \n"
						"v -0.070145 0.445503 -0.215885		  \n"
						"v -0.215885 0.445503 -0.070145		  \n"
						"v -0.215885 0.445503 0.070145		  \n"
						"v -0.133424 0.445503 0.183643		  \n"
						"v -0.000000 0.445503 0.226995		  \n"
						"v 0.133424 0.445503 0.183643		  \n"
						"v 0.146946 0.475528 0.047746		  \n"
						"v 0.215885 0.445503 -0.070145		  \n"
						"v 0.047746 0.475528 -0.146946		  \n"
						"v -0.047746 0.475528 -0.146946		  \n"
						"v -0.074389 0.493844 -0.024170		  \n"
						"v -0.146946 0.475528 0.047746		  \n"
						"v -0.090818 0.475528 0.125000		  \n"
						"v -0.000000 0.475528 0.154509		  \n"
						"v 0.090818 0.475528 0.125000		  \n"
						"v 0.146946 0.475528 -0.047746		  \n"
						"v 0.063279 0.493844 -0.045975		  \n"
						"v 0.045975 0.493844 -0.063279		  \n"
						"v 0.000000 0.493844 -0.078217		  \n"
						"v -0.045975 0.493844 -0.063279		  \n"
						"v 0.000000 0.500000 0.000000		  \n"
						"v 0.000000 -0.500000 0.000000		  \n"
						"vt 0.000000 0.100000				  \n"
						"vt 0.050000 0.100000				  \n"
						"vt 0.100000 0.050000				  \n"
						"vt 0.150000 0.100000				  \n"
						"vt 0.200000 0.050000				  \n"
						"vt 0.250000 0.100000				  \n"
						"vt 0.300000 0.050000				  \n"
						"vt 0.350000 0.050000				  \n"
						"vt 0.500000 0.100000				  \n"
						"vt 0.600000 0.100000				  \n"
						"vt 0.700000 0.100000				  \n"
						"vt 0.800000 0.100000				  \n"
						"vt 0.900000 0.100000				  \n"
						"vt 1.000000 0.100000				  \n"
						"vt 0.400000 0.100000				  \n"
						"vt 0.000000 0.150000				  \n"
						"vt 0.100000 0.150000				  \n"
						"vt 0.200000 0.150000				  \n"
						"vt 0.300000 0.150000				  \n"
						"vt 0.500000 0.150000				  \n"
						"vt 0.600000 0.150000				  \n"
						"vt 0.700000 0.150000				  \n"
						"vt 0.800000 0.150000				  \n"
						"vt 1.000000 0.150000				  \n"
						"vt 0.000000 0.200000				  \n"
						"vt 0.050000 0.250000				  \n"
						"vt 0.100000 0.250000				  \n"
						"vt 0.150000 0.250000				  \n"
						"vt 0.200000 0.250000				  \n"
						"vt 0.250000 0.250000				  \n"
						"vt 0.300000 0.250000				  \n"
						"vt 0.350000 0.250000				  \n"
						"vt 0.400000 0.250000				  \n"
						"vt 0.450000 0.250000				  \n"
						"vt 0.500000 0.250000				  \n"
						"vt 0.550000 0.250000				  \n"
						"vt 0.600000 0.250000				  \n"
						"vt 0.650000 0.250000				  \n"
						"vt 0.700000 0.250000				  \n"
						"vt 0.750000 0.250000				  \n"
						"vt 0.800000 0.250000				  \n"
						"vt 0.850000 0.250000				  \n"
						"vt 0.900000 0.250000				  \n"
						"vt 0.950000 0.250000				  \n"
						"vt 1.000000 0.200000				  \n"
						"vt 0.000000 0.250000				  \n"
						"vt 1.000000 0.250000				  \n"
						"vt 0.000000 0.300000				  \n"
						"vt 0.050000 0.350000				  \n"
						"vt 0.100000 0.350000				  \n"
						"vt 0.150000 0.350000				  \n"
						"vt 0.200000 0.350000				  \n"
						"vt 0.250000 0.350000				  \n"
						"vt 0.300000 0.350000				  \n"
						"vt 0.350000 0.350000				  \n"
						"vt 0.400000 0.350000				  \n"
						"vt 0.450000 0.350000				  \n"
						"vt 0.500000 0.350000				  \n"
						"vt 0.550000 0.350000				  \n"
						"vt 0.600000 0.350000				  \n"
						"vt 0.650000 0.350000				  \n"
						"vt 0.700000 0.350000				  \n"
						"vt 0.750000 0.350000				  \n"
						"vt 0.800000 0.350000				  \n"
						"vt 0.850000 0.350000				  \n"
						"vt 0.900000 0.350000				  \n"
						"vt 0.950000 0.350000				  \n"
						"vt 1.000000 0.300000				  \n"
						"vt 0.000000 0.350000				  \n"
						"vt 1.000000 0.350000				  \n"
						"vt 0.000000 0.400000				  \n"
						"vt 0.050000 0.450000				  \n"
						"vt 0.100000 0.450000				  \n"
						"vt 0.150000 0.450000				  \n"
						"vt 0.200000 0.450000				  \n"
						"vt 0.250000 0.450000				  \n"
						"vt 0.300000 0.450000				  \n"
						"vt 0.350000 0.450000				  \n"
						"vt 0.400000 0.450000				  \n"
						"vt 0.450000 0.450000				  \n"
						"vt 0.500000 0.450000				  \n"
						"vt 0.550000 0.450000				  \n"
						"vt 0.600000 0.450000				  \n"
						"vt 0.650000 0.450000				  \n"
						"vt 0.700000 0.450000				  \n"
						"vt 0.750000 0.450000				  \n"
						"vt 0.800000 0.450000				  \n"
						"vt 0.850000 0.450000				  \n"
						"vt 0.900000 0.450000				  \n"
						"vt 0.950000 0.450000				  \n"
						"vt 1.000000 0.400000				  \n"
						"vt 0.000000 0.450000				  \n"
						"vt 1.000000 0.450000				  \n"
						"vt 0.000000 0.500000				  \n"
						"vt 0.050000 0.500000				  \n"
						"vt 0.100000 0.500000				  \n"
						"vt 0.150000 0.500000				  \n"
						"vt 0.200000 0.500000				  \n"
						"vt 0.250000 0.500000				  \n"
						"vt 0.300000 0.500000				  \n"
						"vt 0.350000 0.500000				  \n"
						"vt 0.400000 0.500000				  \n"
						"vt 0.450000 0.500000				  \n"
						"vt 0.500000 0.500000				  \n"
						"vt 0.550000 0.500000				  \n"
						"vt 0.600000 0.500000				  \n"
						"vt 0.650000 0.500000				  \n"
						"vt 0.700000 0.500000				  \n"
						"vt 0.750000 0.500000				  \n"
						"vt 0.800000 0.500000				  \n"
						"vt 0.850000 0.500000				  \n"
						"vt 0.900000 0.500000				  \n"
						"vt 0.950000 0.500000				  \n"
						"vt 1.000000 0.500000				  \n"
						"vt 0.000000 0.550000				  \n"
						"vt 0.100000 0.550000				  \n"
						"vt 0.150000 0.550000				  \n"
						"vt 0.200000 0.550000				  \n"
						"vt 0.250000 0.550000				  \n"
						"vt 0.350000 0.550000				  \n"
						"vt 0.400000 0.550000				  \n"
						"vt 0.450000 0.550000				  \n"
						"vt 0.500000 0.550000				  \n"
						"vt 0.550000 0.550000				  \n"
						"vt 0.600000 0.550000				  \n"
						"vt 0.650000 0.550000				  \n"
						"vt 0.700000 0.550000				  \n"
						"vt 0.750000 0.550000				  \n"
						"vt 0.800000 0.550000				  \n"
						"vt 0.850000 0.550000				  \n"
						"vt 0.900000 0.550000				  \n"
						"vt 0.950000 0.550000				  \n"
						"vt 1.000000 0.550000				  \n"
						"vt 0.000000 0.600000				  \n"
						"vt 0.050000 0.600000				  \n"
						"vt 0.300000 0.600000				  \n"
						"vt 1.000000 0.600000				  \n"
						"vt 0.000000 0.650000				  \n"
						"vt 0.100000 0.650000				  \n"
						"vt 0.150000 0.650000				  \n"
						"vt 0.200000 0.650000				  \n"
						"vt 0.250000 0.650000				  \n"
						"vt 0.350000 0.650000				  \n"
						"vt 0.400000 0.650000				  \n"
						"vt 0.450000 0.650000				  \n"
						"vt 0.500000 0.650000				  \n"
						"vt 0.550000 0.650000				  \n"
						"vt 0.600000 0.650000				  \n"
						"vt 0.650000 0.650000				  \n"
						"vt 0.700000 0.650000				  \n"
						"vt 0.750000 0.650000				  \n"
						"vt 0.800000 0.650000				  \n"
						"vt 0.850000 0.650000				  \n"
						"vt 0.900000 0.650000				  \n"
						"vt 0.950000 0.650000				  \n"
						"vt 1.000000 0.650000				  \n"
						"vt 0.000000 0.700000				  \n"
						"vt 0.050000 0.700000				  \n"
						"vt 0.300000 0.700000				  \n"
						"vt 1.000000 0.700000				  \n"
						"vt 0.000000 0.750000				  \n"
						"vt 0.100000 0.750000				  \n"
						"vt 0.150000 0.750000				  \n"
						"vt 0.200000 0.750000				  \n"
						"vt 0.250000 0.750000				  \n"
						"vt 0.350000 0.750000				  \n"
						"vt 0.400000 0.750000				  \n"
						"vt 0.450000 0.750000				  \n"
						"vt 0.500000 0.750000				  \n"
						"vt 0.550000 0.750000				  \n"
						"vt 0.600000 0.750000				  \n"
						"vt 0.650000 0.750000				  \n"
						"vt 0.700000 0.750000				  \n"
						"vt 0.750000 0.750000				  \n"
						"vt 0.800000 0.750000				  \n"
						"vt 0.850000 0.750000				  \n"
						"vt 0.900000 0.750000				  \n"
						"vt 0.950000 0.750000				  \n"
						"vt 1.000000 0.750000				  \n"
						"vt 0.000000 0.800000				  \n"
						"vt 0.050000 0.800000				  \n"
						"vt 0.300000 0.800000				  \n"
						"vt 1.000000 0.800000				  \n"
						"vt 0.000000 0.850000				  \n"
						"vt 0.150000 0.850000				  \n"
						"vt 0.250000 0.850000				  \n"
						"vt 0.400000 0.850000				  \n"
						"vt 0.500000 0.850000				  \n"
						"vt 0.600000 0.850000				  \n"
						"vt 0.700000 0.850000				  \n"
						"vt 0.800000 0.850000				  \n"
						"vt 0.900000 0.900000				  \n"
						"vt 1.000000 0.850000				  \n"
						"vt 0.000000 0.900000				  \n"
						"vt 0.150000 0.900000				  \n"
						"vt 0.250000 0.900000				  \n"
						"vt 0.400000 0.950000				  \n"
						"vt 0.500000 0.900000				  \n"
						"vt 0.600000 0.900000				  \n"
						"vt 0.700000 0.900000				  \n"
						"vt 0.800000 0.900000				  \n"
						"vt 1.000000 0.900000				  \n"
						"vt 0.050000 0.950000				  \n"
						"vt 0.100000 0.950000				  \n"
						"vt 0.200000 0.950000				  \n"
						"vt 0.300000 0.950000				  \n"
						"vt 0.375000 1.000000				  \n"
						"vt 0.475000 1.000000				  \n"
						"vt 0.575000 1.000000				  \n"
						"vt 0.675000 1.000000				  \n"
						"vt 0.775000 1.000000				  \n"
						"vt 0.875000 1.000000				  \n"
						"vt 0.975000 1.000000				  \n"
						"vt 0.025000 0.000000				  \n"
						"vt 0.075000 0.000000				  \n"
						"vt 0.125000 0.000000				  \n"
						"vt 0.175000 0.000000				  \n"
						"vt 0.225000 0.000000				  \n"
						"vt 0.275000 0.000000				  \n"
						"vt 0.325000 0.000000				  \n"
						"vt 0.425000 0.000000				  \n"
						"vt 0.475000 0.000000				  \n"
						"vt 0.575000 0.000000				  \n"
						"vt 0.675000 0.000000				  \n"
						"vt 0.775000 0.000000				  \n"
						"vt 0.875000 0.000000				  \n"
						"vt 0.975000 0.000000				  \n"
						"vt 0.025000 1.000000				  \n"
						"vt 0.075000 1.000000				  \n"
						"vt 0.125000 1.000000				  \n"
						"vt 0.175000 1.000000				  \n"
						"vt 0.225000 1.000000				  \n"
						"vt 0.275000 1.000000				  \n"
						"vn 0.077737 -0.991216 -0.106996	  \n"
						"vn 0.104161 -0.941479 -0.320576	  \n"
						"vn 0.247058 -0.948179 -0.199796	  \n"
						"vn -0.000000 -0.991216 -0.132254	  \n"
						"vn -0.130257 -0.944201 -0.302520	  \n"
						"vn 0.046944 -0.980954 -0.188481	  \n"
						"vn -0.197282 -0.978324 -0.062937	  \n"
						"vn -0.395244 -0.908562 -0.135266	  \n"
						"vn 0.005519 -0.998073 0.061812		  \n"
						"vn -0.241938 -0.967102 0.078610	  \n"
						"vn -0.161093 -0.964790 0.207917	  \n"
						"vn -0.008116 -0.964790 0.262897	  \n"
						"vn 0.147961 -0.964790 0.217459		  \n"
						"vn 0.378412 -0.917435 0.122954		  \n"
						"vn 0.250424 -0.967331 -0.039491	  \n"
						"vn 0.484360 -0.869458 -0.097154	  \n"
						"vn 0.303925 -0.855945 -0.418317	  \n"
						"vn -0.000000 -0.855945 -0.517068	  \n"
						"vn -0.329682 -0.869174 -0.368573	  \n"
						"vn -0.494327 -0.862295 0.109946	  \n"
						"vn -0.303486 -0.858837 0.412669	  \n"
						"vn -0.002964 -0.858837 0.512241	  \n"
						"vn 0.330800 -0.863941 0.379708		  \n"
						"vn 0.538445 -0.824299 -0.174951	  \n"
						"vn 0.560229 -0.702633 -0.438693	  \n"
						"vn 0.425387 -0.695878 -0.578619	  \n"
						"vn 0.222622 -0.705705 -0.672621	  \n"
						"vn 0.004041 -0.695878 -0.718149	  \n"
						"vn -0.215252 -0.705705 -0.675016	  \n"
						"vn -0.418848 -0.695878 -0.583370	  \n"
						"vn -0.560967 -0.730790 -0.388925	  \n"
						"vn -0.630854 -0.747366 -0.208489	  \n"
						"vn -0.682345 -0.730692 -0.022231	  \n"
						"vn -0.684249 -0.695878 0.218077	  \n"
						"vn -0.575462 -0.705705 0.413308	  \n"
						"vn -0.425387 -0.695878 0.578619	  \n"
						"vn -0.222622 -0.705705 0.672621	  \n"
						"vn -0.004041 -0.695878 0.718149	  \n"
						"vn 0.215252 -0.705705 0.675016		  \n"
						"vn 0.418848 -0.695877 0.583370		  \n"
						"vn 0.560967 -0.730790 0.388925		  \n"
						"vn 0.630854 -0.747366 0.208489		  \n"
						"vn 0.690734 -0.722303 0.034117		  \n"
						"vn 0.705480 -0.681188 -0.195656	  \n"
						"vn 0.764223 -0.594056 -0.251119	  \n"
						"vn 0.710907 -0.438808 -0.549599	  \n"
						"vn 0.530822 -0.442762 -0.722627	  \n"
						"vn 0.281538 -0.442762 -0.851292	  \n"
						"vn 0.004694 -0.442762 -0.896627	  \n"
						"vn -0.272608 -0.442762 -0.854194	  \n"
						"vn -0.523226 -0.442762 -0.728146	  \n"
						"vn -0.722627 -0.442762 -0.530822	  \n"
						"vn -0.851292 -0.442762 -0.281538	  \n"
						"vn -0.896627 -0.442762 -0.004695	  \n"
						"vn -0.854194 -0.442762 0.272608	  \n"
						"vn -0.728146 -0.442762 0.523226	  \n"
						"vn -0.530822 -0.442762 0.722627	  \n"
						"vn -0.281538 -0.442762 0.851292	  \n"
						"vn -0.004694 -0.442762 0.896627	  \n"
						"vn 0.272608 -0.442762 0.854194		  \n"
						"vn 0.523226 -0.442762 0.728146		  \n"
						"vn 0.722627 -0.442762 0.530822		  \n"
						"vn 0.851292 -0.442762 0.281538		  \n"
						"vn 0.902964 -0.429348 0.017799		  \n"
						"vn 0.869181 -0.426015 -0.251068	  \n"
						"vn 0.900295 -0.316810 -0.298498	  \n"
						"vn 0.779158 -0.220549 -0.586746	  \n"
						"vn 0.574075 -0.230011 -0.785833	  \n"
						"vn 0.303142 -0.230011 -0.924770	  \n"
						"vn 0.002535 -0.230011 -0.973185	  \n"
						"vn -0.298319 -0.230011 -0.926337	  \n"
						"vn -0.569972 -0.230011 -0.788813	  \n"
						"vn -0.785833 -0.230011 -0.574075	  \n"
						"vn -0.924770 -0.230011 -0.303142	  \n"
						"vn -0.973185 -0.230011 -0.002536	  \n"
						"vn -0.926337 -0.230011 0.298319	  \n"
						"vn -0.788813 -0.230011 0.569972	  \n"
						"vn -0.574075 -0.230011 0.785833	  \n"
						"vn -0.303142 -0.230011 0.924770	  \n"
						"vn -0.002536 -0.230011 0.973185	  \n"
						"vn 0.298319 -0.230011 0.926337		  \n"
						"vn 0.569972 -0.230011 0.788813		  \n"
						"vn 0.785833 -0.230011 0.574075		  \n"
						"vn 0.924770 -0.230011 0.303142		  \n"
						"vn 0.975135 -0.220646 0.020667		  \n"
						"vn 0.939665 -0.155047 -0.304944	  \n"
						"vn 0.951057 -0.000000 -0.309016	  \n"
						"vn 0.807868 0.058738 -0.586429		  \n"
						"vn 0.588062 0.000170 -0.808816		  \n"
						"vn 0.309017 -0.000000 -0.951057	  \n"
						"vn -0.000000 0.000000 -1.000000	  \n"
						"vn -0.309017 0.000000 -0.951057	  \n"
						"vn -0.586514 0.060112 -0.807705	  \n"
						"vn -0.808816 0.000170 -0.588062	  \n"
						"vn -0.951057 0.000000 -0.309017	  \n"
						"vn -1.000000 0.000000 0.000000		  \n"
						"vn -0.951057 0.000000 0.309017		  \n"
						"vn -0.809017 0.000000 0.587785		  \n"
						"vn -0.587785 0.000000 0.809017		  \n"
						"vn -0.309017 0.000000 0.951057		  \n"
						"vn 0.000000 0.000000 1.000000		  \n"
						"vn 0.309017 0.000000 0.951057		  \n"
						"vn 0.587785 -0.000000 0.809017		  \n"
						"vn 0.809017 0.000000 0.587785		  \n"
						"vn 0.951057 -0.000000 0.309017		  \n"
						"vn 1.000000 0.000000 0.000001		  \n"
						"vn 0.929302 0.166811 -0.329501		  \n"
						"vn 0.578409 0.215882 -0.786663		  \n"
						"vn 0.298319 0.230011 -0.926337		  \n"
						"vn -0.002536 0.230011 -0.973185	  \n"
						"vn -0.309485 0.214701 -0.926349	  \n"
						"vn -0.786663 0.215882 -0.578409	  \n"
						"vn -0.926337 0.230011 -0.298319	  \n"
						"vn -0.973185 0.230011 0.002536		  \n"
						"vn -0.924770 0.230011 0.303142		  \n"
						"vn -0.785832 0.230011 0.574075		  \n"
						"vn -0.569972 0.230011 0.788813		  \n"
						"vn -0.298319 0.230011 0.926337		  \n"
						"vn 0.002536 0.230011 0.973185		  \n"
						"vn 0.303142 0.230011 0.924770		  \n"
						"vn 0.574075 0.230011 0.785832		  \n"
						"vn 0.788814 0.230011 0.569972		  \n"
						"vn 0.926337 0.230011 0.298319		  \n"
						"vn 0.975233 0.220549 0.016711		  \n"
						"vn 0.912599 0.284166 -0.293962		  \n"
						"vn 0.771342 0.286076 -0.568499		  \n"
						"vn -0.560838 0.299316 -0.771927	  \n"
						"vn 0.833347 0.462055 -0.303379		  \n"
						"vn 0.519372 0.442156 -0.731266		  \n"
						"vn 0.272608 0.442762 -0.854194		  \n"
						"vn -0.004694 0.442762 -0.896627	  \n"
						"vn -0.272392 0.440981 -0.855183	  \n"
						"vn -0.731266 0.442156 -0.519372	  \n"
						"vn -0.854194 0.442762 -0.272608	  \n"
						"vn -0.896627 0.442762 0.004695		  \n"
						"vn -0.851292 0.442762 0.281538		  \n"
						"vn -0.722627 0.442762 0.530822		  \n"
						"vn -0.523226 0.442762 0.728146		  \n"
						"vn -0.272608 0.442762 0.854194		  \n"
						"vn 0.004695 0.442762 0.896627		  \n"
						"vn 0.281538 0.442762 0.851292		  \n"
						"vn 0.530822 0.442762 0.722627		  \n"
						"vn 0.728146 0.442762 0.523226		  \n"
						"vn 0.854194 0.442762 0.272608		  \n"
						"vn 0.898182 0.438808 0.026775		  \n"
						"vn 0.786212 0.564072 -0.252376		  \n"
						"vn 0.666176 0.558557 -0.494190		  \n"
						"vn -0.482344 0.571486 -0.663889	  \n"
						"vn 0.652921 0.713573 -0.253983		  \n"
						"vn 0.411257 0.704726 -0.578125		  \n"
						"vn 0.218076 0.695878 -0.684249		  \n"
						"vn -0.003875 0.705705 -0.708495	  \n"
						"vn -0.217910 0.694361 -0.685842	  \n"
						"vn -0.578125 0.704726 -0.411257	  \n"
						"vn -0.684249 0.695878 -0.218077	  \n"
						"vn -0.708495 0.705705 0.003875		  \n"
						"vn -0.681751 0.695878 0.225764		  \n"
						"vn -0.570907 0.705705 0.419578		  \n"
						"vn -0.418848 0.695878 0.583370		  \n"
						"vn -0.215252 0.705705 0.675016		  \n"
						"vn 0.004041 0.695878 0.718149		  \n"
						"vn 0.222622 0.705705 0.672621		  \n"
						"vn 0.425387 0.695877 0.578619		  \n"
						"vn 0.565096 0.730692 0.383087		  \n"
						"vn 0.632918 0.747366 0.202136		  \n"
						"vn 0.681042 0.730893 0.044464		  \n"
						"vn 0.577832 0.796679 -0.177236		  \n"
						"vn 0.434622 0.820001 -0.372427		  \n"
						"vn -0.355545 0.827788 -0.434000	  \n"
						"vn 0.473069 0.880453 -0.031755		  \n"
						"vn 0.173393 0.874074 -0.453795		  \n"
						"vn -0.109711 0.863523 -0.492230	  \n"
						"vn -0.397289 0.902652 -0.165473	  \n"
						"vn -0.465557 0.873348 0.143250		  \n"
						"vn -0.298689 0.858837 0.416154		  \n"
						"vn 0.002964 0.858837 0.512241		  \n"
						"vn 0.335295 0.862295 0.379506		  \n"
						"vn 0.378412 0.917435 0.122954		  \n"
						"vn 0.278363 0.946635 -0.162468		  \n"
						"vn 0.140763 0.938918 -0.314037		  \n"
						"vn -0.240688 0.934310 -0.262933	  \n"
						"vn -0.250460 0.962343 -0.105664	  \n"
						"vn -0.273677 0.958408 0.080960		  \n"
						"vn -0.147961 0.964790 0.217459		  \n"
						"vn 0.008116 0.964790 0.262897		  \n"
						"vn 0.149526 0.967102 0.205805		  \n"
						"vn 0.197282 0.978325 -0.062936		  \n"
						"vn -0.046944 0.980954 -0.188480	  \n"
						"vn -0.000000 0.991216 -0.132254	  \n"
						"vn -0.021650 0.983913 -0.177329	  \n"
						"vn 0.018293 0.996880 0.076780		  \n"
						"f 3/3/1 4/4/2 2/2/3				  \n"
						"f 5/5/4 6/6/5 4/4/2				  \n"
						"f 7/7/6 8/8/7 6/6/5				  \n"
						"f 6/6/5 8/8/7 14/15/8				  \n"
						"f 8/8/7 191/221/9 14/15/8			  \n"
						"f 191/222/9 9/9/10 14/15/8			  \n"
						"f 191/223/9 10/10/11 9/9/10		  \n"
						"f 191/224/9 11/11/12 10/10/11		  \n"
						"f 191/225/9 12/12/13 11/11/12		  \n"
						"f 191/226/9 13/13/14 12/12/13		  \n"
						"f 191/227/9 1/14/15 13/13/14		  \n"
						"f 1/1/15 2/2/3 15/16/16			  \n"
						"f 15/16/16 2/2/3 16/17/17			  \n"
						"f 2/2/3 4/4/2 16/17/17				  \n"
						"f 16/17/17 4/4/2 17/18/18			  \n"
						"f 4/4/2 6/6/5 17/18/18				  \n"
						"f 17/18/18 6/6/5 18/19/19			  \n"
						"f 6/6/5 14/15/8 18/19/19			  \n"
						"f 14/15/8 9/9/10 19/20/20			  \n"
						"f 9/9/10 10/10/11 19/20/20			  \n"
						"f 19/20/20 10/10/11 20/21/21		  \n"
						"f 10/10/11 11/11/12 20/21/21		  \n"
						"f 20/21/21 11/11/12 21/22/22		  \n"
						"f 11/11/12 12/12/13 21/22/22		  \n"
						"f 21/22/22 12/12/13 22/23/23		  \n"
						"f 12/12/13 13/13/14 22/23/23		  \n"
						"f 13/13/14 1/14/15 15/24/16		  \n"
						"f 23/25/24 15/16/16 24/26/25		  \n"
						"f 15/16/16 16/17/17 24/26/25		  \n"
						"f 24/26/25 16/17/17 25/27/26		  \n"
						"f 25/27/26 16/17/17 26/28/27		  \n"
						"f 16/17/17 17/18/18 26/28/27		  \n"
						"f 26/28/27 17/18/18 27/29/28		  \n"
						"f 27/29/28 17/18/18 28/30/29		  \n"
						"f 17/18/18 18/19/19 28/30/29		  \n"
						"f 28/30/29 18/19/19 29/31/30		  \n"
						"f 29/31/30 18/19/19 30/32/31		  \n"
						"f 18/19/19 14/15/8 30/32/31		  \n"
						"f 30/32/31 14/15/8 31/33/32		  \n"
						"f 31/33/32 14/15/8 32/34/33		  \n"
						"f 14/15/8 19/20/20 32/34/33		  \n"
						"f 32/34/33 19/20/20 33/35/34		  \n"
						"f 33/35/34 19/20/20 34/36/35		  \n"
						"f 19/20/20 20/21/21 34/36/35		  \n"
						"f 34/36/35 20/21/21 35/37/36		  \n"
						"f 35/37/36 20/21/21 36/38/37		  \n"
						"f 20/21/21 21/22/22 36/38/37		  \n"
						"f 36/38/37 21/22/22 37/39/38		  \n"
						"f 37/39/38 21/22/22 38/40/39		  \n"
						"f 21/22/22 22/23/23 38/40/39		  \n"
						"f 38/40/39 22/23/23 39/41/40		  \n"
						"f 39/41/40 22/23/23 40/42/41		  \n"
						"f 22/23/23 13/13/14 40/42/41		  \n"
						"f 40/42/41 13/13/14 41/43/42		  \n"
						"f 41/43/42 13/13/14 42/44/43		  \n"
						"f 13/13/14 15/24/16 42/44/43		  \n"
						"f 42/44/43 15/24/16 23/45/24		  \n"
						"f 23/25/24 24/26/25 43/46/44		  \n"
						"f 42/44/43 23/45/24 43/47/44		  \n"
						"f 43/46/44 24/26/25 44/48/45		  \n"
						"f 44/48/45 24/26/25 45/49/46		  \n"
						"f 24/26/25 25/27/26 45/49/46		  \n"
						"f 45/49/46 25/27/26 46/50/47		  \n"
						"f 25/27/26 26/28/27 46/50/47		  \n"
						"f 46/50/47 26/28/27 47/51/48		  \n"
						"f 26/28/27 27/29/28 47/51/48		  \n"
						"f 47/51/48 27/29/28 48/52/49		  \n"
						"f 27/29/28 28/30/29 48/52/49		  \n"
						"f 48/52/49 28/30/29 49/53/50		  \n"
						"f 28/30/29 29/31/30 49/53/50		  \n"
						"f 49/53/50 29/31/30 50/54/51		  \n"
						"f 29/31/30 30/32/31 50/54/51		  \n"
						"f 50/54/51 30/32/31 51/55/52		  \n"
						"f 30/32/31 31/33/32 51/55/52		  \n"
						"f 51/55/52 31/33/32 52/56/53		  \n"
						"f 31/33/32 32/34/33 52/56/53		  \n"
						"f 52/56/53 32/34/33 53/57/54		  \n"
						"f 32/34/33 33/35/34 53/57/54		  \n"
						"f 53/57/54 33/35/34 54/58/55		  \n"
						"f 33/35/34 34/36/35 54/58/55		  \n"
						"f 54/58/55 34/36/35 55/59/56		  \n"
						"f 34/36/35 35/37/36 55/59/56		  \n"
						"f 55/59/56 35/37/36 56/60/57		  \n"
						"f 35/37/36 36/38/37 56/60/57		  \n"
						"f 56/60/57 36/38/37 57/61/58		  \n"
						"f 36/38/37 37/39/38 57/61/58		  \n"
						"f 57/61/58 37/39/38 58/62/59		  \n"
						"f 37/39/38 38/40/39 58/62/59		  \n"
						"f 58/62/59 38/40/39 59/63/60		  \n"
						"f 38/40/39 39/41/40 59/63/60		  \n"
						"f 59/63/60 39/41/40 60/64/61		  \n"
						"f 39/41/40 40/42/41 60/64/61		  \n"
						"f 60/64/61 40/42/41 61/65/62		  \n"
						"f 40/42/41 41/43/42 61/65/62		  \n"
						"f 61/65/62 41/43/42 62/66/63		  \n"
						"f 41/43/42 42/44/43 62/66/63		  \n"
						"f 62/66/63 42/44/43 63/67/64		  \n"
						"f 42/44/43 43/47/44 63/67/64		  \n"
						"f 63/67/64 43/47/44 44/68/45		  \n"
						"f 44/48/45 45/49/46 64/69/65		  \n"
						"f 63/67/64 44/68/45 64/70/65		  \n"
						"f 64/69/65 45/49/46 65/71/66		  \n"
						"f 65/71/66 45/49/46 66/72/67		  \n"
						"f 45/49/46 46/50/47 66/72/67		  \n"
						"f 66/72/67 46/50/47 67/73/68		  \n"
						"f 46/50/47 47/51/48 67/73/68		  \n"
						"f 67/73/68 47/51/48 68/74/69		  \n"
						"f 47/51/48 48/52/49 68/74/69		  \n"
						"f 68/74/69 48/52/49 69/75/70		  \n"
						"f 48/52/49 49/53/50 69/75/70		  \n"
						"f 69/75/70 49/53/50 70/76/71		  \n"
						"f 49/53/50 50/54/51 70/76/71		  \n"
						"f 70/76/71 50/54/51 71/77/72		  \n"
						"f 50/54/51 51/55/52 71/77/72		  \n"
						"f 71/77/72 51/55/52 72/78/73		  \n"
						"f 51/55/52 52/56/53 72/78/73		  \n"
						"f 72/78/73 52/56/53 73/79/74		  \n"
						"f 52/56/53 53/57/54 73/79/74		  \n"
						"f 73/79/74 53/57/54 74/80/75		  \n"
						"f 53/57/54 54/58/55 74/80/75		  \n"
						"f 74/80/75 54/58/55 75/81/76		  \n"
						"f 54/58/55 55/59/56 75/81/76		  \n"
						"f 75/81/76 55/59/56 76/82/77		  \n"
						"f 55/59/56 56/60/57 76/82/77		  \n"
						"f 76/82/77 56/60/57 77/83/78		  \n"
						"f 56/60/57 57/61/58 77/83/78		  \n"
						"f 77/83/78 57/61/58 78/84/79		  \n"
						"f 57/61/58 58/62/59 78/84/79		  \n"
						"f 78/84/79 58/62/59 79/85/80		  \n"
						"f 58/62/59 59/63/60 79/85/80		  \n"
						"f 79/85/80 59/63/60 80/86/81		  \n"
						"f 59/63/60 60/64/61 80/86/81		  \n"
						"f 80/86/81 60/64/61 81/87/82		  \n"
						"f 60/64/61 61/65/62 81/87/82		  \n"
						"f 81/87/82 61/65/62 82/88/83		  \n"
						"f 61/65/62 62/66/63 82/88/83		  \n"
						"f 82/88/83 62/66/63 83/89/84		  \n"
						"f 62/66/63 63/67/64 83/89/84		  \n"
						"f 83/89/84 63/67/64 84/90/85		  \n"
						"f 63/67/64 64/70/65 84/90/85		  \n"
						"f 84/90/85 64/70/65 65/91/66		  \n"
						"f 65/71/66 66/72/67 85/92/86		  \n"
						"f 84/90/85 65/91/66 85/93/86		  \n"
						"f 85/92/86 66/72/67 86/94/87		  \n"
						"f 86/94/87 66/72/67 87/95/88		  \n"
						"f 66/72/67 67/73/68 87/95/88		  \n"
						"f 87/95/88 67/73/68 88/96/89		  \n"
						"f 67/73/68 68/74/69 88/96/89		  \n"
						"f 88/96/89 68/74/69 89/97/90		  \n"
						"f 68/74/69 69/75/70 89/97/90		  \n"
						"f 89/97/90 69/75/70 90/98/91		  \n"
						"f 69/75/70 70/76/71 90/98/91		  \n"
						"f 90/98/91 70/76/71 91/99/92		  \n"
						"f 70/76/71 71/77/72 91/99/92		  \n"
						"f 91/99/92 71/77/72 92/100/93		  \n"
						"f 71/77/72 72/78/73 92/100/93		  \n"
						"f 92/100/93 72/78/73 93/101/94		  \n"
						"f 72/78/73 73/79/74 93/101/94		  \n"
						"f 93/101/94 73/79/74 94/102/95		  \n"
						"f 73/79/74 74/80/75 94/102/95		  \n"
						"f 94/102/95 74/80/75 95/103/96		  \n"
						"f 74/80/75 75/81/76 95/103/96		  \n"
						"f 95/103/96 75/81/76 96/104/97		  \n"
						"f 75/81/76 76/82/77 96/104/97		  \n"
						"f 96/104/97 76/82/77 97/105/98		  \n"
						"f 76/82/77 77/83/78 97/105/98		  \n"
						"f 97/105/98 77/83/78 98/106/99		  \n"
						"f 77/83/78 78/84/79 98/106/99		  \n"
						"f 98/106/99 78/84/79 99/107/100	  \n"
						"f 78/84/79 79/85/80 99/107/100		  \n"
						"f 99/107/100 79/85/80 100/108/101	  \n"
						"f 79/85/80 80/86/81 100/108/101	  \n"
						"f 100/108/101 80/86/81 101/109/102	  \n"
						"f 80/86/81 81/87/82 101/109/102	  \n"
						"f 101/109/102 81/87/82 102/110/103	  \n"
						"f 81/87/82 82/88/83 102/110/103	  \n"
						"f 102/110/103 82/88/83 103/111/104	  \n"
						"f 82/88/83 83/89/84 103/111/104	  \n"
						"f 103/111/104 83/89/84 104/112/105	  \n"
						"f 83/89/84 84/90/85 104/112/105	  \n"
						"f 104/112/105 84/90/85 105/113/106	  \n"
						"f 84/90/85 85/93/86 105/113/106	  \n"
						"f 105/113/106 85/93/86 86/114/87	  \n"
						"f 86/94/87 87/95/88 106/115/107	  \n"
						"f 87/95/88 88/96/89 107/116/108	  \n"
						"f 88/96/89 89/97/90 107/116/108	  \n"
						"f 107/116/108 89/97/90 108/117/109	  \n"
						"f 89/97/90 90/98/91 108/117/109	  \n"
						"f 108/117/109 90/98/91 109/118/110	  \n"
						"f 90/98/91 91/99/92 109/118/110	  \n"
						"f 109/118/110 91/99/92 110/119/111	  \n"
						"f 91/99/92 92/100/93 110/119/111	  \n"
						"f 92/100/93 93/101/94 111/120/112	  \n"
						"f 93/101/94 94/102/95 111/120/112	  \n"
						"f 111/120/112 94/102/95 112/121/113  \n"
						"f 94/102/95 95/103/96 112/121/113	  \n"
						"f 112/121/113 95/103/96 113/122/114  \n"
						"f 95/103/96 96/104/97 113/122/114	  \n"
						"f 113/122/114 96/104/97 114/123/115  \n"
						"f 96/104/97 97/105/98 114/123/115	  \n"
						"f 114/123/115 97/105/98 115/124/116  \n"
						"f 97/105/98 98/106/99 115/124/116	  \n"
						"f 115/124/116 98/106/99 116/125/117  \n"
						"f 98/106/99 99/107/100 116/125/117	  \n"
						"f 116/125/117 99/107/100 117/126/118 \n"
						"f 99/107/100 100/108/101 117/126/118 \n"
						"f 117/126/118 100/108/101 118/127/119\n"
						"f 100/108/101 101/109/102 118/127/119\n"
						"f 118/127/119 101/109/102 119/128/120\n"
						"f 101/109/102 102/110/103 119/128/120\n"
						"f 119/128/120 102/110/103 120/129/121\n"
						"f 102/110/103 103/111/104 120/129/121\n"
						"f 120/129/121 103/111/104 121/130/122\n"
						"f 103/111/104 104/112/105 121/130/122\n"
						"f 121/130/122 104/112/105 122/131/123\n"
						"f 104/112/105 105/113/106 122/131/123\n"
						"f 122/131/123 105/113/106 123/132/124\n"
						"f 105/113/106 86/114/87 123/132/124  \n"
						"f 123/132/124 86/114/87 106/133/107  \n"
						"f 106/115/107 87/95/88 124/134/125	  \n"
						"f 124/134/125 87/95/88 125/135/126	  \n"
						"f 87/95/88 107/116/108 125/135/126	  \n"
						"f 110/119/111 92/100/93 126/136/127  \n"
						"f 92/100/93 111/120/112 126/136/127  \n"
						"f 123/132/124 106/133/107 124/137/125\n"
						"f 124/134/125 125/135/126 127/138/128\n"
						"f 125/135/126 107/116/108 128/139/129\n"
						"f 107/116/108 108/117/109 128/139/129\n"
						"f 128/139/129 108/117/109 129/140/130\n"
						"f 108/117/109 109/118/110 129/140/130\n"
						"f 129/140/130 109/118/110 130/141/131\n"
						"f 109/118/110 110/119/111 130/141/131\n"
						"f 130/141/131 110/119/111 131/142/132\n"
						"f 110/119/111 126/136/127 131/142/132\n"
						"f 126/136/127 111/120/112 132/143/133\n"
						"f 111/120/112 112/121/113 132/143/133\n"
						"f 132/143/133 112/121/113 133/144/134\n"
						"f 112/121/113 113/122/114 133/144/134\n"
						"f 133/144/134 113/122/114 134/145/135\n"
						"f 113/122/114 114/123/115 134/145/135\n"
						"f 134/145/135 114/123/115 135/146/136\n"
						"f 114/123/115 115/124/116 135/146/136\n"
						"f 135/146/136 115/124/116 136/147/137\n"
						"f 115/124/116 116/125/117 136/147/137\n"
						"f 136/147/137 116/125/117 137/148/138\n"
						"f 116/125/117 117/126/118 137/148/138\n"
						"f 137/148/138 117/126/118 138/149/139\n"
						"f 117/126/118 118/127/119 138/149/139\n"
						"f 138/149/139 118/127/119 139/150/140\n"
						"f 118/127/119 119/128/120 139/150/140\n"
						"f 139/150/140 119/128/120 140/151/141\n"
						"f 119/128/120 120/129/121 140/151/141\n"
						"f 140/151/141 120/129/121 141/152/142\n"
						"f 120/129/121 121/130/122 141/152/142\n"
						"f 141/152/142 121/130/122 142/153/143\n"
						"f 121/130/122 122/131/123 142/153/143\n"
						"f 142/153/143 122/131/123 143/154/144\n"
						"f 122/131/123 123/132/124 143/154/144\n"
						"f 143/154/144 123/132/124 144/155/145\n"
						"f 123/132/124 124/137/125 144/155/145\n"
						"f 144/155/145 124/137/125 127/156/128\n"
						"f 127/138/128 125/135/126 145/157/146\n"
						"f 145/157/146 125/135/126 146/158/147\n"
						"f 125/135/126 128/139/129 146/158/147\n"
						"f 131/142/132 126/136/127 147/159/148\n"
						"f 126/136/127 132/143/133 147/159/148\n"
						"f 144/155/145 127/156/128 145/160/146\n"
						"f 145/157/146 146/158/147 148/161/149\n"
						"f 146/158/147 128/139/129 149/162/150\n"
						"f 128/139/129 129/140/130 149/162/150\n"
						"f 149/162/150 129/140/130 150/163/151\n"
						"f 129/140/130 130/141/131 150/163/151\n"
						"f 150/163/151 130/141/131 151/164/152\n"
						"f 130/141/131 131/142/132 151/164/152\n"
						"f 151/164/152 131/142/132 152/165/153\n"
						"f 131/142/132 147/159/148 152/165/153\n"
						"f 147/159/148 132/143/133 153/166/154\n"
						"f 132/143/133 133/144/134 153/166/154\n"
						"f 153/166/154 133/144/134 154/167/155\n"
						"f 133/144/134 134/145/135 154/167/155\n"
						"f 154/167/155 134/145/135 155/168/156\n"
						"f 134/145/135 135/146/136 155/168/156\n"
						"f 155/168/156 135/146/136 156/169/157\n"
						"f 135/146/136 136/147/137 156/169/157\n"
						"f 156/169/157 136/147/137 157/170/158\n"
						"f 136/147/137 137/148/138 157/170/158\n"
						"f 157/170/158 137/148/138 158/171/159\n"
						"f 137/148/138 138/149/139 158/171/159\n"
						"f 158/171/159 138/149/139 159/172/160\n"
						"f 138/149/139 139/150/140 159/172/160\n"
						"f 159/172/160 139/150/140 160/173/161\n"
						"f 139/150/140 140/151/141 160/173/161\n"
						"f 160/173/161 140/151/141 161/174/162\n"
						"f 140/151/141 141/152/142 161/174/162\n"
						"f 161/174/162 141/152/142 162/175/163\n"
						"f 141/152/142 142/153/143 162/175/163\n"
						"f 162/175/163 142/153/143 163/176/164\n"
						"f 142/153/143 143/154/144 163/176/164\n"
						"f 163/176/164 143/154/144 164/177/165\n"
						"f 143/154/144 144/155/145 164/177/165\n"
						"f 164/177/165 144/155/145 165/178/166\n"
						"f 144/155/145 145/160/146 165/178/166\n"
						"f 165/178/166 145/160/146 148/179/149\n"
						"f 148/161/149 146/158/147 166/180/167\n"
						"f 166/180/167 146/158/147 167/181/168\n"
						"f 146/158/147 149/162/150 167/181/168\n"
						"f 152/165/153 147/159/148 168/182/169\n"
						"f 147/159/148 153/166/154 168/182/169\n"
						"f 165/178/166 148/179/149 166/183/167\n"
						"f 166/180/167 167/181/168 177/184/170\n"
						"f 167/181/168 149/162/150 169/185/171\n"
						"f 149/162/150 150/163/151 169/185/171\n"
						"f 150/163/151 151/164/152 169/185/171\n"
						"f 169/185/171 151/164/152 170/186/172\n"
						"f 151/164/152 152/165/153 170/186/172\n"
						"f 152/165/153 168/182/169 170/186/172\n"
						"f 168/182/169 153/166/154 171/187/173\n"
						"f 153/166/154 154/167/155 171/187/173\n"
						"f 154/167/155 155/168/156 171/187/173\n"
						"f 171/187/173 155/168/156 172/188/174\n"
						"f 155/168/156 156/169/157 172/188/174\n"
						"f 156/169/157 157/170/158 172/188/174\n"
						"f 172/188/174 157/170/158 173/189/175\n"
						"f 157/170/158 158/171/159 173/189/175\n"
						"f 158/171/159 159/172/160 173/189/175\n"
						"f 173/189/175 159/172/160 174/190/176\n"
						"f 159/172/160 160/173/161 174/190/176\n"
						"f 160/173/161 161/174/162 174/190/176\n"
						"f 174/190/176 161/174/162 175/191/177\n"
						"f 161/174/162 162/175/163 175/191/177\n"
						"f 162/175/163 163/176/164 175/191/177\n"
						"f 175/191/177 163/176/164 176/192/178\n"
						"f 163/176/164 164/177/165 176/192/178\n"
						"f 164/177/165 165/178/166 176/192/178\n"
						"f 176/192/178 165/178/166 177/193/170\n"
						"f 165/178/166 166/183/167 177/193/170\n"
						"f 177/184/170 167/181/168 185/194/179\n"
						"f 167/181/168 169/185/171 185/194/179\n"
						"f 185/194/179 169/185/171 178/195/180\n"
						"f 169/185/171 170/186/172 178/195/180\n"
						"f 178/195/180 170/186/172 179/196/181\n"
						"f 170/186/172 168/182/169 179/196/181\n"
						"f 179/196/181 168/182/169 180/197/182\n"
						"f 168/182/169 171/187/173 180/197/182\n"
						"f 171/187/173 172/188/174 180/197/182\n"
						"f 180/197/182 172/188/174 181/198/183\n"
						"f 172/188/174 173/189/175 181/198/183\n"
						"f 181/198/183 173/189/175 182/199/184\n"
						"f 173/189/175 174/190/176 182/199/184\n"
						"f 182/199/184 174/190/176 183/200/185\n"
						"f 174/190/176 175/191/177 183/200/185\n"
						"f 183/200/185 175/191/177 184/201/186\n"
						"f 175/191/177 176/192/178 184/201/186\n"
						"f 176/192/178 177/193/170 185/202/179\n"
						"f 185/194/179 178/195/180 186/203/187\n"
						"f 186/203/187 178/195/180 187/204/188\n"
						"f 178/195/180 179/196/181 188/205/189\n"
						"f 179/196/181 180/197/182 189/206/190\n"
						"f 189/206/190 180/197/182 190/207/191\n"
						"f 180/197/182 181/198/183 190/208/191\n"
						"f 181/198/183 182/199/184 190/209/191\n"
						"f 182/199/184 183/200/185 190/210/191\n"
						"f 183/200/185 184/201/186 190/211/191\n"
						"f 184/201/186 176/192/178 190/212/191\n"
						"f 176/192/178 185/202/179 190/213/191\n"
						"f 2/2/3 1/1/15 191/214/9			  \n"
						"f 3/3/1 2/2/3 191/215/9			  \n"
						"f 4/4/2 3/3/1 191/216/9			  \n"
						"f 5/5/4 4/4/2 191/217/9			  \n"
						"f 6/6/5 5/5/4 191/218/9			  \n"
						"f 7/7/6 6/6/5 191/219/9			  \n"
						"f 8/8/7 7/7/6 191/220/9			  \n"
						"f 185/194/179 186/203/187 190/228/191\n"
						"f 186/203/187 187/204/188 190/229/191\n"
						"f 187/204/188 178/195/180 190/230/191\n"
						"f 178/195/180 188/205/189 190/231/191\n"
						"f 188/205/189 179/196/181 190/232/191\n"
						"f 179/196/181 189/206/190 190/233/191\n";

					AssetParser::OBJParser parser;
					parser.Parse(ByteBuffer(ReinterpretCast(byte*, Data.GetValue()), Data.GetLength()), subInfo);
				}
				else if (Type == PrimitiveMeshTypes::Cone)
				{
					static String Data =
						"v 0.475529 -0.154509 1.000000			\n"
						"v 0.404509 -0.293893 1.000000			\n"
						"v 0.293893 -0.404509 1.000000			\n"
						"v 0.154509 -0.475529 1.000000			\n"
						"v 0.000000 -0.500000 1.000000			\n"
						"v -0.154509 -0.475528 1.000000			\n"
						"v -0.293893 -0.404509 1.000000			\n"
						"v -0.404509 -0.293893 1.000000			\n"
						"v -0.475528 -0.154509 1.000000			\n"
						"v -0.500000 -0.000000 1.000000			\n"
						"v -0.475528 0.154509 1.000000			\n"
						"v -0.404509 0.293893 1.000000			\n"
						"v -0.293893 0.404509 1.000000			\n"
						"v -0.154509 0.475528 1.000000			\n"
						"v -0.000000 0.500000 1.000000			\n"
						"v 0.154508 0.475528 1.000000			\n"
						"v 0.293893 0.404509 1.000000			\n"
						"v 0.404509 0.293893 1.000000			\n"
						"v 0.475528 0.154509 1.000000			\n"
						"v 0.500000 -0.000000 1.000000			\n"
						"v 0.000000 0.000000 0.000000			\n"
						"vt 0.737764 0.172746					\n"
						"vt 0.702254 0.103054					\n"
						"vt 0.646946 0.047746					\n"
						"vt 0.577254 0.012236					\n"
						"vt 0.500000 -0.000000					\n"
						"vt 0.422746 0.012236					\n"
						"vt 0.353054 0.047746					\n"
						"vt 0.297746 0.103054					\n"
						"vt 0.262236 0.172746					\n"
						"vt 0.250000 0.250000					\n"
						"vt 0.262236 0.327254					\n"
						"vt 0.297746 0.396946					\n"
						"vt 0.353054 0.452254					\n"
						"vt 0.422746 0.487764					\n"
						"vt 0.500000 0.500000					\n"
						"vt 0.577254 0.487764					\n"
						"vt 0.646946 0.452254					\n"
						"vt 0.702254 0.396946					\n"
						"vt 0.737764 0.327254					\n"
						"vt 0.750000 0.250000					\n"
						"vt 0.250000 0.500000					\n"
						"vt 0.275000 0.500000					\n"
						"vt 0.300000 0.500000					\n"
						"vt 0.325000 0.500000					\n"
						"vt 0.350000 0.500000					\n"
						"vt 0.375000 0.500000					\n"
						"vt 0.400000 0.500000					\n"
						"vt 0.425000 0.500000					\n"
						"vt 0.450000 0.500000					\n"
						"vt 0.475000 0.500000					\n"
						"vt 0.500000 0.500000					\n"
						"vt 0.525000 0.500000					\n"
						"vt 0.550000 0.500000					\n"
						"vt 0.575000 0.500000					\n"
						"vt 0.600000 0.500000					\n"
						"vt 0.625000 0.500000					\n"
						"vt 0.650000 0.500000					\n"
						"vt 0.675000 0.500000					\n"
						"vt 0.700000 0.500000					\n"
						"vt 0.725000 0.500000					\n"
						"vt 0.750000 0.500000					\n"
						"vt 0.500000 1.000000					\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 -0.000000 1.000000			\n"
						"vn 0.000000 0.000000 1.000000			\n"
						"vn 0.000000 0.000001 1.000000			\n"
						"vn 0.000000 0.000001 1.000000			\n"
						"vn 0.058135 0.029621 -0.997869			\n"
						"vn 0.841810 -0.273520 -0.465341		\n"
						"vn 0.723607 -0.525731 -0.447214		\n"
						"vn 0.520267 -0.716086 -0.465341		\n"
						"vn 0.276393 -0.850651 -0.447214		\n"
						"vn 0.139329 -0.879689 -0.454681		\n"
						"vn -0.404349 -0.793579 -0.454681		\n"
						"vn -0.525731 -0.723607 -0.447214		\n"
						"vn -0.629788 -0.629788 -0.454681		\n"
						"vn -0.879689 -0.139329 -0.454680		\n"
						"vn -0.894427 0.000000 -0.447214		\n"
						"vn -0.879689 0.139329 -0.454680		\n"
						"vn -0.629788 0.629788 -0.454680		\n"
						"vn -0.525731 0.723607 -0.447214		\n"
						"vn -0.273521 0.841810 -0.465341		\n"
						"vn 0.000000 0.894427 -0.447214			\n"
						"vn 0.273521 0.841810 -0.465341			\n"
						"vn 0.525731 0.723607 -0.447214			\n"
						"vn 0.629788 0.629788 -0.454680			\n"
						"vn 0.879689 0.139330 -0.454680			\n"
						"vn 0.894427 0.000001 -0.447214			\n"
						"f 2/2/1 1/1/2 20/20/3 19/19/4			\n"
						"f 2/2/1 19/19/4 18/18/5 17/17/6		\n"
						"f 2/2/1 17/17/6 16/16/7 15/15/8		\n"
						"f 2/2/1 15/15/8 14/14/9 13/13/10		\n"
						"f 2/2/1 13/13/10 12/12/11 11/11/12		\n"
						"f 2/2/1 11/11/12 10/10/13 9/9/14		\n"
						"f 2/2/1 9/9/14 8/8/15 7/7/16			\n"
						"f 2/2/1 7/7/16 6/6/17 5/5/18			\n"
						"f 2/2/1 5/5/18 4/4/19 3/3/20			\n"
						"f 21/42/21 1/21/22 2/22/23 3/23/24		\n"
						"f 21/42/21 3/23/24 4/24/25 5/25/26		\n"
						"f 5/25/26 6/26/27 21/42/21				\n"
						"f 21/42/21 6/26/27 7/27/28 8/28/29		\n"
						"f 8/28/29 9/29/30 21/42/21				\n"
						"f 21/42/21 9/29/30 10/30/31 11/31/32	\n"
						"f 11/31/32 12/32/33 21/42/21			\n"
						"f 21/42/21 12/32/33 13/33/34 14/34/35	\n"
						"f 21/42/21 14/34/35 15/35/36 16/36/37	\n"
						"f 21/42/21 16/36/37 17/37/38 18/38/39	\n"
						"f 18/38/39 19/39/40 21/42/21			\n"
						"f 21/42/21 19/39/40 20/40/41 1/41/22	\n";

					AssetParser::OBJParser parser;
					parser.Parse(ByteBuffer(ReinterpretCast(byte*, Data.GetValue()), Data.GetLength()), subInfo);
				}

				MeshInfo info(&ResourceSystemAllocators::ResourceAllocator);
				info.SubMeshes.Add(subMeshInfo);

				return RenderingManager::GetInstance()->GetActiveDevice()->CreateMesh(&info, IDevice::BufferUsages::StaticDraw);
			}

			void ResourceFactory::CompileImageFile(ByteBuffer& OutBuffer, const ByteBuffer& InBuffer)
			{
				int32 width;
				int32 height;
				int32 channelsCount;
				const byte* const data = stbi_load_from_memory(InBuffer.GetBuffer(), InBuffer.GetSize(), &width, &height, &channelsCount, 0);

				OutBuffer << width;
				OutBuffer << height;
				OutBuffer << channelsCount;

				int32 size = width * height * channelsCount;

				OutBuffer.AppendBuffer(data, 0, size);

				stbi_image_free(ConstCast(byte*, data));
			}

			void ResourceFactory::CompileOBJFile(ByteBuffer& OutBuffer, const ByteBuffer& InBuffer)
			{
				MeshInfo meshInfo(&ResourceSystemAllocators::ResourceAllocator);
				AssetParser::OBJParser objParser;
				objParser.Parse(InBuffer, meshInfo);

				AssetParser::InternalModelParser internalParser;
				internalParser.Dump(OutBuffer, meshInfo);
			}

			ResourceFactory::FileTypes ResourceFactory::GetFileTypeByExtension(const WString &Extension)
			{
				if (Extension == L".txt")
					return FileTypes::TXT;

				if (Extension == L".png")
					return FileTypes::PNG;

				if (Extension == L".jpg")
					return FileTypes::JPG;

				if (Extension == L".shader")
					return FileTypes::SHADER;

				if (Extension == L".obj")
					return FileTypes::OBJ;

				if (Extension == L".font")
					return FileTypes::FONT;

				return FileTypes::Unknown;
			}

			ResourceFactory::ResourceTypes ResourceFactory::GetResourceTypeByFileType(FileTypes FileType)
			{
				switch (FileType)
				{
				case FileTypes::TXT:
					return ResourceTypes::Text;

				case FileTypes::PNG:
				case FileTypes::JPG:
					return ResourceTypes::Texture;

				case FileTypes::SHADER:
					return ResourceTypes::Program;

				case FileTypes::OBJ:
					return ResourceTypes::Mesh;

				case FileTypes::FONT:
					return ResourceTypes::Font;
				}
			}
		}
	}
}